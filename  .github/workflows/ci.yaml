---
name: build

on:
  pull_request:
    types:
      - assigned
      - labeled

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - windows-latest
          - ubuntu-latest
        python-version:
          - 3.8
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.1.1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get code
        uses: actions/checkout@v2

      - name: Analyse code
        run: |
          pip install pylint
          pylint src/ tests/ setup.py

      - name: Check cyclomatic complexity
        run: |
          pip install xenon
          xenon -a A src/ tests/ setup.py

      - name: Check code coverage (non-Windows)
        env:
          PYTHONPATH: '$PYTHONPATH:src/:tests/'
        run: |
          pip install coverage
          coverage run -m unittest discover -s tests/unit/
          coverage report -m --fail-under=100
        if: ${{ ! startsWith( matrix.os, 'windows' ) }}

      - name: Check code coverage (Windows)
        env:
          PYTHONPATH: '%PYTHONPATH%;src\;tests\'
        run: |
          pip install coverage
          coverage run -m unittest discover -s tests/unit/
          coverage report -m --fail-under=100
        if: ${{ startsWith( matrix.os, 'windows' ) }}

      - name: Run integration tests (non-Windows)
        env:
          PYTHONPATH: '$PYTHONPATH:src/:tests/'
        run: python -m unittest discover -s tests/integration/
        if: ${{ ! startsWith( matrix.os, 'windows' ) }}

      - name: Run integration tests (Windows)
        env:
          PYTHONPATH: '%PYTHONPATH%;src\;tests\'
        run: python -m unittest discover -s tests/integration/
        if: ${{ startsWith( matrix.os, 'windows' ) }}
